/*!
* ux-angularjs-datagrid v.1.6.9
* (c) 2018, Obogo
* https://github.com/obogo/ux-angularjs-datagrid
* License: MIT.
*/
(function (exports, global) {
if (typeof define === "function" && define.amd) {
  define(exports);
} else if (typeof module !== "undefined" && module.exports) {
  module.exports = exports;
} else {
  global.ux = exports;
}


!function(a,b){"function"==typeof define&&define.amd?define(a):"undefined"!=typeof module&&module.exports?module.exports=a:b.ux=a,angular.module("ux").factory("windowScroll",function(){return["inst",function(a){function b(){var b,c;a.scrollHistory&&(c=a.scrollHistory.getCurrentScroll())?setTimeout(function(){window.scrollTo(0,c)}):b=setTimeout(function(){window.scrollBy(1,1),window.scrollBy(-1,-1)})}var c=a.scrollModel;return a.calculateViewportHeight=function(){return window.screen.height},c.onUpdateScroll=function(b){var d=window.hasOwnProperty("scrollY")?window.scrollY:window.pageYOffset;a.values.scroll!==d&&(a.dispatch(ux.datagrid.events.ON_SCROLL_START,d),a.values.speed=d-a.values.scroll,a.values.absSpeed=Math.abs(a.values.speed),a.values.scroll=d,a.values.scrollPercent=(a.values.scroll/a.getContentHeight()*100).toFixed(2)),c.waitForStop(),a.dispatch(ux.datagrid.events.ON_SCROLL,a.values)},window.addEventListener("scroll",a.scrollModel.onUpdateScroll),a.scope.$on(ux.datagrid.events.ON_READY,b),a.scope.$on("$destroy",function(){window.removeEventListener("scroll",a.scrollModel.onUpdateScroll)}),a}]})}(this.ux=this.ux||{},function(){return this}());
//# sourceMappingURL=ux-datagrid-windowScroll.min.js.map
}(this.ux = this.ux || {}, function() {return this;}()));
