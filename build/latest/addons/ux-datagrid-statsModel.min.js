/*!
* ux-angularjs-datagrid v.1.6.13
* (c) 2018, Obogo
* https://github.com/obogo/ux-angularjs-datagrid
* License: MIT.
*/
(function (exports, global) {
if (typeof define === "function" && define.amd) {
  define(exports);
} else if (typeof module !== "undefined" && module.exports) {
  module.exports = exports;
} else {
  global.ux = exports;
}


!function(a,b){"function"==typeof define&&define.amd?define(a):"undefined"!=typeof module&&module.exports?module.exports=a:b.ux=a,a.datagrid.events.STATS_UPDATE="datagrid:statsUpdate",angular.module("ux").factory("statsModel",function(){return["inst",function(a){function b(){h=Date.now()}function c(){l.initialRenderTime=Date.now()-h,d()}function d(){for(;k.length;)k.pop()()}function e(){j.push(Date.now())}function f(){var a=j.length-1;j[a]=Date.now()-j[a],l.lastRenderTime=j[a],i+=j[a],g()}function g(){l.renders=j.length,l.averageRenderTime=i/l.renders,a.dispatch(ux.datagrid.events.STATS_UPDATE,l)}var h=0,i=0,j=[],k=[],l={initialRenderTime:0,averageRenderTime:0,lastRenderTime:0,renders:0};k.push(a.scope.$on(ux.datagrid.events.ON_INIT,b)),k.push(a.scope.$on(ux.datagrid.events.ON_READY,c)),a.unwatchers.push(a.scope.$on(ux.datagrid.events.ON_BEFORE_UPDATE_WATCHERS,e)),a.unwatchers.push(a.scope.$on(ux.datagrid.events.ON_AFTER_UPDATE_WATCHERS,f)),a.stats=l}]})}(this.ux=this.ux||{},function(){return this}());
//# sourceMappingURL=ux-datagrid-statsModel.min.js.map
}(this.ux = this.ux || {}, function() {return this;}()));
